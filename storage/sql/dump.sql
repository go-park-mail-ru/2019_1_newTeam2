USE wordtrainer;

DROP TABLE dictionary_to_library;
DROP TABLE cards_library;
DROP TABLE dictionary;
DROP TABLE card;
DROP TABLE word;
DROP TABLE user;
DROP TABLE language;

CREATE TABLE language (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL
);

INSERT INTO language (name) VALUES ("English");
INSERT INTO language (name) VALUES ("Russian");

CREATE TABLE user (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	Username VARCHAR(255) NOT NULL,
	Email VARCHAR(255) NOT NULL,
	Password VARCHAR(255) NOT NULL,
	LangID INT UNSIGNED NOT NULL,
	PronounceON TINYINT NOT NULL,
	Score INT UNSIGNED NOT NULL,
	AvatarPath VARCHAR(255) NOT NULL,
	FOREIGN KEY (LangID) REFERENCES language (ID)
);

CREATE TABLE dictionary (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	description TEXT,
	UserID INT UNSIGNED NOT NULL,
	FOREIGN KEY (UserID) REFERENCES user (ID)
);

CREATE TABLE word (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	LangID INT UNSIGNED NOT NULL,
	FOREIGN KEY (LangID) REFERENCES language (ID)
);

CREATE TABLE card (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	word INT UNSIGNED NOT NULL,
	translation INT UNSIGNED NOT NULL,
	FOREIGN KEY (word) REFERENCES word (ID),
	FOREIGN KEY (translation) REFERENCES word (ID)
);

CREATE TABLE cards_library (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	frequency DOUBLE NOT NULL,
	card_id INT UNSIGNED NOT NULL,
	count INT UNSIGNED NOT NULL,
	FOREIGN KEY (card_id) REFERENCES card (ID)
);

CREATE TABLE dictionary_to_library (
	ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	dictionary_id INT UNSIGNED NOT NULL,
	library_id INT UNSIGNED NOT NULL,
	FOREIGN KEY (dictionary_id) REFERENCES dictionary (ID) ON DELETE CASCADE,
	FOREIGN KEY (library_id) REFERENCES cards_library (ID) ON DELETE CASCADE
);
